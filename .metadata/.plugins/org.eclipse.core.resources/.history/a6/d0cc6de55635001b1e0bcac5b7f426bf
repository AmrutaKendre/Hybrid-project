package com.demoExtentReports;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;

public class OrangeHrmTest {
	 // create instance of three extent reports at class level
	public ExtentHtmlReporter htmlReporter ; 
	public ExtentReports report;
	public ExtentTest logger;
	public WebDriver driver;
	public ExtentTest test;
	
	@BeforeTest
	public void setupExtent() {
		// where you want to use extent reports specify the path//location of file
		File fs =  new File("./Reports/orange_hrm.html"); 
			//instantiate html reporter class 
			//by using object creation
			
		htmlReporter = new ExtentHtmlReporter(fs);
		
		//set the title of documentation report
		htmlReporter.config().setDocumentTitle("Automation Report");
		htmlReporter.config().setDocumentTitle("Functional Report");
		htmlReporter.config().setTheme(Theme.DARK);
		
		//Attach Html report
		report = new ExtentReports();
		report.attachReporter(htmlReporter);
		
		report.setSystemInfo("Hostname","LocalHost");
		//set system information for which operating system you are used.
		report.setSystemInfo("OS", "Windows");
		report.setSystemInfo("Tester name", "Amruta");
		report.setSystemInfo("Browser", "Chrome");
		
			 
		 }
	
	//If you could not flush the report it is not possible to generate report.
	@AfterTest
	public void endReport() {
		report.flush();
		
	}
	@BeforeMethod
	public void setup() {
		//set the system variable path
		System.setProperty("webdriver.chrome.driver", "./Drivers/chromedriver.exe");
		
		//create the instance of chrome driver
		driver = new ChromeDriver();
		
		//navigate to the application
		
		driver.get("https://opensource-demo.orangehrmlive.com/");
		// manage the window
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(10,TimeUnit.SECONDS);
	}
	
	@Test
	public void verifyTitleTest() {
	test = 	report.createTest("verifyTitleTest");
		String actualTitle = driver.getTitle();
		String ExpectedTitle = "OrangeHRM";
		Assert.assertEquals(actualTitle, ExpectedTitle);
	}
	@AfterMethod
	public void tearDown(ITestResult result) {
		if(result.getStatus()==ITestResult.FAILURE) {
			test.log(Status.FAIL,"Test Case failed" + result.getName());
			test.log(Status.FAIL, "Test Case failed"+result.getThrowable());
			
		}else if(result.getStatus()==ITestResult.SUCCESS) {
			test.log(Status.FAIL,"Test Case Passed" + result.getName());
			
		}else if(result.getStatus()==ITestResult.SKIP) {
			test.log(Status.SKIP,"Test Case Passed" + result.getName());
			
		}
		driver.quit();
	}
	 // create method for capture screenshot
	public static String captureScreenshot(String screenshotname) {
		String dateFormat = new SimpleDateFormat("yyyyMMddhhmmss").format(new Date());
		//take screenshot interface
		
		
		
		return " ";
		
	}
	
		
	
	}
	


